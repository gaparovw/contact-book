{"ast":null,"code":"var _jsxFileName = \"/Users/macbook_pro/Desktop/contact-book/src/components/Sidebar/Sidebar.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport \"./Sidebar.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = _ref => {\n  _s();\n  let {\n    handleCont\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const nameInput = e => {\n    setName(e.target.value);\n  };\n  const emailInput = e => {\n    setSurname(e.target.value);\n  };\n  const numberInput = e => {\n    setNumber(e.target.value);\n  };\n  const imgInput = e => {\n    setImg(e.target.value);\n  };\n  const handleAdd = () => {\n    if (!name.trim() || !email.trim() || !number.trim() || !img.trim()) {\n      alert(\"заполните все поля\");\n      return;\n    }\n    const newcontact = {\n      name: name,\n      email: email,\n      number: number,\n      img: img,\n      id: Date.now()\n    };\n    handleCont(newcontact);\n    setName(\"\");\n    setSurname(\"\");\n    setNumber(\"\");\n    setImg(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CREATE CONTACT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      type: \"text\",\n      className: \"inp\",\n      onChange: nameInput,\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: surname,\n      type: \"text\",\n      className: \"inp\",\n      onChange: setSurname,\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      type: \"number\",\n      className: \"inp\",\n      onChange: numberInput,\n      placeholder: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: img,\n      type: \"text\",\n      className: \"inp\",\n      onChange: imgInput,\n      placeholder: \"avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      className: \"btn-add\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"dV+7vsAwXbJgmvzNVAZmPlFkz3E=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","Sidebar","handleCont","name","setName","number","setNumber","img","setImg","surname","setSurname","nameInput","e","target","value","emailInput","numberInput","imgInput","handleAdd","trim","email","alert","newcontact","id","Date","now"],"sources":["/Users/macbook_pro/Desktop/contact-book/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["// import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Sidebar = ({ handleCont }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [img, setImg] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const nameInput = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n    const emailInput = (e) => {\r\n        setSurname(e.target.value);\r\n    };\r\n    const numberInput = (e) => {\r\n        setNumber(e.target.value);\r\n    };\r\n    const imgInput = (e) => {\r\n        setImg(e.target.value);\r\n    };\r\n    const handleAdd = () => {\r\n        if (!name.trim() || !email.trim() || !number.trim() || !img.trim()) {\r\n            alert(\"заполните все поля\");\r\n            return;\r\n        }\r\n        const newcontact = {\r\n            name: name,\r\n            email: email,\r\n            number: number,\r\n            img: img,\r\n            id: Date.now(),\r\n        };\r\n\r\n        handleCont(newcontact);\r\n        setName(\"\");\r\n        setSurname(\"\");\r\n        setNumber(\"\");\r\n        setImg(\"\");\r\n    };\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <h1>CREATE CONTACT</h1>\r\n            <input\r\n                value={name}\r\n                type=\"text\"\r\n                className=\"inp\"\r\n                onChange={nameInput}\r\n                placeholder=\"name\"\r\n            />\r\n            <input\r\n                value={surname}\r\n                type=\"text\"\r\n                className=\"inp\"\r\n                onChange={setSurname}\r\n                placeholder=\"email\"\r\n            />\r\n            <input\r\n                value={number}\r\n                type=\"number\"\r\n                className=\"inp\"\r\n                onChange={numberInput}\r\n                placeholder=\"number\"\r\n            />\r\n            <input\r\n                value={img}\r\n                type=\"text\"\r\n                className=\"inp\"\r\n                onChange={imgInput}\r\n                placeholder=\"avatar\"\r\n            />\r\n            <button onClick={handleAdd} className=\"btn-add\">\r\n                add\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}